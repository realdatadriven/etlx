name: Debug Windows Build with DuckDB Library

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Go environment
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      # Step 3: Download DuckDB Precompiled Library
      - name: Download DuckDB Library
        run: |
          $version = "v1.2.0"
          $duckdb_url = "https://github.com/duckdb/duckdb/releases/download/$version/libduckdb-windows-amd64.zip"
          $destinationPath = "$(Get-Location)\duckdb"
          Invoke-WebRequest -Uri $duckdb_url -OutFile "duckdb.zip"
          Expand-Archive -Path "duckdb.zip" -DestinationPath $destinationPath
          Write-Host "DuckDB library extracted to $destinationPath"

      # Step 4: Install MinGW for Cross-Compilation
      - name: Install MinGW
        run: |
          choco install mingw -y
          Write-Host "MinGW installed for cross-compilation"

      # Step 5: Set Environment Variables
      - name: Set Environment Variables
        run: |
          echo "CGO_ENABLED=1" >> $env:GITHUB_ENV
          echo "CC=x86_64-w64-mingw32-gcc" >> $env:GITHUB_ENV
          echo "CGO_CFLAGS=-I$(Get-Location)\duckdb\" >> $env:GITHUB_ENV
          echo "CGO_LDFLAGS=-L$(Get-Location)\duckdb\ -lduckdb" >> $env:GITHUB_ENV

      # Step 6: Verify DuckDB Library
      - name: Verify DuckDB Library
        run: |
          $libPath = "$(Get-Location)\duckdb\"
          if (!(Test-Path "$libPath\duckdb.lib")) {
            Write-Error "duckdb.lib not found in $libPath"
          }
          Write-Host "duckdb.lib found in $libPath"

      # Step 7: Build the Application
      - name: Build Windows Binary
        run: |
          mkdir dist
          go build -o dist/etlx-windows-amd64.exe ./cmd/main.go
          echo "CGO_ENABLED=1" >> $env:GITHUB_ENV
          echo "CC=x86_64-w64-mingw32-gcc" >> $env:GITHUB_ENV
          echo "CGO_CFLAGS=-I$(Get-Location)\duckdbarm64\" >> $env:GITHUB_ENV
          echo "CGO_LDFLAGS=-L$(Get-Location)\duckdbarm64\ -lduckdb" >> $env:GITHUB_ENV
          echo "GOARCH=arm64" >> $env:GITHUB_ENV
          go build -o dist/etlx-windows-arm64.exe ./cmd/main.go
      #go build -tags=duckdb_use_lib -o dist/etlx-windows-amd64.exe ./cmd/main.go
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-binary
          path: dist/*windows*
