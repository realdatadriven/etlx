name: MacOS Build with CGO and UnixODBC

on:
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Go
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      # Step 3: Install UnixODBC
      - name: Install UnixODBC
        run: |
          brew install unixodbc
          brew --prefix unixodbc

      # Step 4: Set Environment Variables
      - name: Set Environment Variables
        run: |
          ODBC_PREFIX=$(brew --prefix unixodbc)
          echo "CGO_ENABLED=1" >> $GITHUB_ENV
          echo "CGO_CFLAGS=-I$ODBC_PREFIX/include" >> $GITHUB_ENV
          echo "CGO_LDFLAGS=-L$ODBC_PREFIX/lib -lodbc" >> $GITHUB_ENV

      # Step 5: Build the Application
      - name: Build MacOS Binary
        run: |
          mkdir dist
          go build -o dist/etlx-macos-amd64 ./cmd/main.go

      # Step 6: Upload Build Logs for Debugging (if Build Fails)
      - name: Upload Logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: ${{ github.workspace }}

      # Step 7: Upload Built Binary for Testing (if Successful)
      - name: Upload Binary
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: macos-binary
          path: dist/etlx-macos-amd64
