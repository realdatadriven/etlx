name: macOS Build with CGO and Cross-Compiler

on:
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Go environment
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      # Step 3: Install UnixODBC
      - name: Install UnixODBC
        run: |
          brew update
          brew install unixodbc
          echo "Installed UnixODBC for ODBC support"

      # Step 4: Download DuckDB Precompiled Library
      - name: Download DuckDB Library
        run: |
          version="v1.1.3"
          duckdb_url="https://github.com/duckdb/duckdb/releases/download/$version/libduckdb-osx-universal.zip"
          destinationPath="$(pwd)/duckdb"
          curl -L $duckdb_url -o duckdb.zip
          mkdir -p $destinationPath
          unzip duckdb.zip -d $destinationPath
          echo "DuckDB library extracted to $destinationPath"

      # Step 5: Set Environment Variables
      - name: Set Environment Variables
        run: |
          echo "CGO_ENABLED=1" >> $GITHUB_ENV
          echo "CGO_CFLAGS=-I$(pwd)/duckdb -I/usr/local/include" >> $GITHUB_ENV
          echo "CGO_LDFLAGS=-L$(pwd)/duckdb -L/usr/local/lib -lduckdb -lodbc" >> $GITHUB_ENV

      # Step 6: Verify DuckDB Library
      - name: Verify DuckDB Library
        run: |
          libPath="$(pwd)/duckdb"
          if [ ! -f "$libPath/libduckdb.dylib" ]; then
            echo "libduckdb.dylib not found in $libPath"
            exit 1
          fi
          echo "libduckdb.dylib found in $libPath"

      # Step 7: Build the Application
      - name: Build macOS Binary
        run: |
          mkdir dist
          go build -tags=duckdb_use_lib -o dist/etlx-darwin-amd64 ./cmd/main.go

      # Step 8: Upload Build Logs for Debugging (if Build Fails)
      - name: Upload Logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: ${{ github.workspace }}

      # Step 9: Upload Built Binary for Testing (if Successful)
      - name: Upload Binary
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: macos-binary
          path: dist/etlx-darwin-amd64
